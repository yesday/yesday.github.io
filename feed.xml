<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>YesDay Posts</title>
    <link>http://yesday.github.io</link>
    <atom:link href="http://yesday.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <description>Web feed for the YesDay Posts</description>
    <language>en-gb</language>
    <pubDate>Sat, 21 Sep 2019 18:20:03 +0100</pubDate>
    <lastBuildDate>Sat, 21 Sep 2019 18:20:03 +0100</lastBuildDate>

    <item>
      <title>ydsu project: YesDay System Utilities (ydsu) for Developers and Power Users</title>
      <link>http://yesday.github.io/blog/2019/yesday-system-utilities.html</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2019/yesday-system-utilities.html</guid>
      <description>&amp;lt;!-- toc disabled --&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;YesDay System Utilities (ydsu), pronounced &amp;lt;code&amp;gt;i’dsʊ&amp;lt;/code&amp;gt;, is a package manager for your shell scripts. Primarily targeted for use by Developers, SysAdmins, Power Users, DevOps and Operations Engineers, ydsu is designed to encourage modification of the shell scripts in an IDE-friendly way. Shell scripts of relevant functionality are grouped together into modules and are managed by the management scripts provided by ydsu. Modules can be either external, developed by a third party, or your own. You specify the list of modules you want to use inside the &amp;lt;code&amp;gt;module.yml&amp;lt;/code&amp;gt; file. Your local configuration of modules inside the &amp;lt;code&amp;gt;module.yml&amp;lt;/code&amp;gt; is called a distribution. Refer to the project’s &amp;lt;a href=&amp;quot;https://github.com/yesday/ydsu&amp;quot;&amp;gt;GitHub repository&amp;lt;/a&amp;gt; for information on how to get started.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;Advantages&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
 &amp;lt;ul&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Lightweight&amp;lt;/strong&amp;gt; - Only requires git, ansible and groovy to be present on your system. Even works with ZSH too.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Multi-platform&amp;lt;/strong&amp;gt; - Runs on any UNIX based platforms: Mac OSX, Linux, Cygwin, Solaris and FreeBSD.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Modular and easy to extend&amp;lt;/strong&amp;gt; - You can create modules for your own individual needs and/or make them available to the public. Even ydsu itself is implemented as a set of two (internal) modules: &amp;lt;code&amp;gt;manage&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;util&amp;lt;/code&amp;gt;. More so, if you write your modules in a JVM language, you can take advantage of the internal module &amp;lt;code&amp;gt;util&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Polyglot&amp;lt;/strong&amp;gt; - Write your modules in any programming language: Groovy, Bash, Kotlin, Java, Python, Go, Ruby, Node.js, you name it. Ydsu will manage them in the same way.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Distributed - no lock-in&amp;lt;/strong&amp;gt; - Store your modules in any private or public git repository. Ydsu will take care of the rest. Even ydsu itself can be hosted on and installed from your own private repository. It is designed from the ground up NOT to lock you into any specific repository.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Can operate in any network or even air-gaped environment&amp;lt;/strong&amp;gt; - Ydsu can be used in internet/intranet/LAN or even air-gaped environments. No matter what environment you are in, you can take full advantage of the features.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Lines of Code (LOC) and Code Quality&amp;lt;/strong&amp;gt; - Well written, clean and high quality codebase: 1390 lines of groovy code, 146 lines of bash code, 31% comments, 21 groovy files, 2 bash files, 66 lines per file on average.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>Java Gotchas: SortedSet ignores the equals method</title>
      <link>http://yesday.github.io/blog/2018/java-gotchas-sorted-set-ignores-the-equals-method.html</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2018/java-gotchas-sorted-set-ignores-the-equals-method.html</guid>
      <description>&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
   &amp;lt;div id=&amp;quot;toctitle&amp;quot; class=&amp;quot;title&amp;quot;&amp;gt;
    Table of Contents
   &amp;lt;/div&amp;gt; 
   &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#sortedset_fails_to_obey_the_general_contract_of_the_set_interface&amp;quot;&amp;gt;1. SortedSet fails to obey the general contract of the Set interface&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#how_the_sortedset_could_be_fixed_in_a_future_version_of_java&amp;quot;&amp;gt;2. How the SortedSet could be fixed in a future version of Java&amp;lt;/a&amp;gt; 
     &amp;lt;ul class=&amp;quot;sectlevel2&amp;quot;&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#fix_the_javadoc&amp;quot;&amp;gt;2.1. Fix the javadoc&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#default_equals_inside_sortedset&amp;quot;&amp;gt;2.2. Default equals inside SortedSet&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#fallback_to_default_comparator_inside_implementation_classes&amp;quot;&amp;gt;2.3. Fallback to default comparator inside implementation classes&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
     &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;sortedset_fails_to_obey_the_general_contract_of_the_set_interface&amp;quot;&amp;gt;1. SortedSet fails to obey the general contract of the Set interface&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Consider the below code which creates a &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; using a comparator based on string length&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;public class SortedSetTest {
    public static void main(String[] args) {
        SortedSet&amp;amp;lt;String&amp;amp;gt; sortedSet = new TreeSet&amp;amp;lt;&amp;amp;gt;(Comparator.comparing(String::length));
        sortedSet.addAll(Set.of(&amp;quot;aa&amp;quot;, &amp;quot;bb&amp;quot;));
        System.out.println(sortedSet);
    }
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The output of the above is&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;[aa]&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;While I would expect&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;[aa, bb]&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;or&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;[bb, aa]&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The &amp;lt;code&amp;gt;bb&amp;lt;/code&amp;gt; element disappears, breaking the &amp;lt;code&amp;gt;Set&amp;lt;/code&amp;gt; contract. The comparator is supposed to only sort the elements and not distinguish them from one another, which is what equals does in all the collections.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;On the other hand, if I enhance the comparator to always return non-zero for unequal items like below, only then do I get the correct results.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;public class SortedSetTest {
    public static void main(String[] args) {
        SortedSet&amp;amp;lt;String&amp;amp;gt; sortedSet = new TreeSet&amp;amp;lt;&amp;amp;gt;(Comparator.comparing(String::length)
            .thenComparing(String::toString));
        sortedSet.addAll(Set.of(&amp;quot;aa&amp;quot;, &amp;quot;bb&amp;quot;));
        System.out.println(sortedSet);
    }
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The output now is &amp;lt;code&amp;gt;[aa, bb]&amp;lt;/code&amp;gt; as I would expect.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The question is, why does &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; ignore the &amp;lt;code&amp;gt;equals&amp;lt;/code&amp;gt; method in first place and removes an unequal object from the set?&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The &amp;lt;code&amp;gt;comparator&amp;lt;/code&amp;gt; method inside the &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; interface is &amp;lt;a href=&amp;quot;https://docs.oracle.com/javase/10/docs/api/java/util/SortedSet.html&amp;quot;&amp;gt;documented&amp;lt;/a&amp;gt; as follows:&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock&amp;quot;&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     Returns the comparator used to order the elements in this set, or null if this set uses the natural ordering of its elements. 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The above indicates that the comparator is only used to order the elements in the set and not to distinguish them from one another, which is what &amp;lt;code&amp;gt;equals&amp;lt;/code&amp;gt; is for in all the collections.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Digging into the &amp;lt;a href=&amp;quot;https://docs.oracle.com/javase/10/docs/api/java/util/SortedSet.html&amp;quot;&amp;gt;javadoc&amp;lt;/a&amp;gt; further, it turns out that the above javadoc comment is incorrect, because there is another side note that contradicts it:&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock&amp;quot;&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     Note that the ordering maintained by a sorted set (whether or not an explicit comparator is provided) must be consistent with equals if the sorted set is to correctly implement the Set interface. (See the Comparable interface or Comparator interface for a precise definition of consistent with equals.) This is so because the Set interface is defined in terms of the equals operation, but 
    &amp;lt;strong&amp;gt;a sorted set performs all element comparisons using its compareTo (or compare) method, so two elements that are deemed equal by this method are, from the standpoint of the sorted set, equal&amp;lt;/strong&amp;gt;. The behavior of a sorted set is well-defined even if its ordering is inconsistent with equals; it just 
    &amp;lt;strong&amp;gt;fails to obey the general contract of the Set&amp;lt;/strong&amp;gt; interface. 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Note that, &amp;lt;a href=&amp;quot;https://docs.oracle.com/javase/10/docs/api/java/util/Comparator.html&amp;quot;&amp;gt;by definition&amp;lt;/a&amp;gt;, consistent with equals means:&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock&amp;quot;&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     The ordering imposed by a comparator c on a set of elements S is said to be consistent with equals if and only if c.compare(e1, e2)==0 has the same boolean value as e1.equals(e2) for every e1 and e2 in S. 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;how_the_sortedset_could_be_fixed_in_a_future_version_of_java&amp;quot;&amp;gt;2. How the SortedSet could be fixed in a future version of Java&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The behaviour described in the previous section is clearly a very poor design choice of the &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; interface and along with the inadequate documentation the issue becomes even worse. I hope that the issue will be fixed in a future version of Java.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;In the meantime, here are some hints on how the issue could be addressed from both the javadoc and the implementation perspective of the &amp;lt;a href=&amp;quot;https://docs.oracle.com/javase/10/docs/api/java/util/SortedSet.html&amp;quot;&amp;gt;SortedSet&amp;lt;/a&amp;gt;:&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Fix the javadoc&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Default equals inside SortedSet&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Fallback to default comparator inside implementation classes&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The following sections describe the above in more detail.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;fix_the_javadoc&amp;quot;&amp;gt;2.1. Fix the javadoc&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;The most obvious improvement is to update the relevant javadoc documentation. In particular, the &amp;lt;code&amp;gt;comparator&amp;lt;/code&amp;gt; method inside the &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; interface could be &amp;lt;a href=&amp;quot;https://docs.oracle.com/javase/10/docs/api/java/util/SortedSet.html&amp;quot;&amp;gt;documented&amp;lt;/a&amp;gt; as follows in order to prevent misuse:&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;quoteblock&amp;quot;&amp;gt; 
    &amp;lt;blockquote&amp;gt;
      Returns the comparator used to order the elements in this set, or null if this set uses the natural ordering of its elements. Note that the equals method relies on this comparator so as 
     &amp;lt;code&amp;gt;e1.equals(e2)&amp;lt;/code&amp;gt; is actually calling 
     &amp;lt;code&amp;gt;c.compare(e1, e2)==0&amp;lt;/code&amp;gt;. Refer to the class javadoc for more details in regards to the consistency of the ordering with the equals method. 
    &amp;lt;/blockquote&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;The above would be very helpful because the comparator in all the rest of interfaces does not replace the equals method and users naturally expect it to only be used for sorting. For example, in the HashSet you can store two objects whose compareTo returns 0 and hashCode returns the same value, while the equals determines that they are unequal.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;default_equals_inside_sortedset&amp;quot;&amp;gt;2.2. Default equals inside SortedSet&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Another improvement would be to implement a default &amp;lt;code&amp;gt;equals&amp;lt;/code&amp;gt; method inside the &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; interface:&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;@Override
default boolean equals(Object o) {
    return comparator().compareTo(o) == 0;
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;The above would make it much clearer for the user that the comparator can possibly break the Set contract.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;fallback_to_default_comparator_inside_implementation_classes&amp;quot;&amp;gt;2.3. Fallback to default comparator inside implementation classes&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;While the previous two improvements don’t actually fix the issue, here is how the issue could be fixed for good. The implementation classes of the &amp;lt;code&amp;gt;SortedSet&amp;lt;/code&amp;gt; (like &amp;lt;code&amp;gt;TreeSet&amp;lt;/code&amp;gt;) could automatically fallback to the default comparator when the custom comparator’s compareTo returns 0, or simply call equals (just like the &amp;lt;code&amp;gt;HashSet&amp;lt;/code&amp;gt; does), or at the worst throw an &amp;lt;code&amp;gt;IllegalStateException&amp;lt;/code&amp;gt; with a message that the comparator is not consistent with equals. Alternatively, making any of the above configurable during the instantiation of the implementation class (like &amp;lt;code&amp;gt;TreeSet&amp;lt;/code&amp;gt;) would also at least provide some reasonable precaution. I believe the usability gain in this case would outweighs by far the slight performance overhead introduced by the fallback comparator.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>How to install ArchLinux with Full Disk Encryption on ODROID-C2</title>
      <link>http://yesday.github.io/blog/2017/how-to-install-archlinux-with-full-disk-encryption-on-odroid-c2.html</link>
      <pubDate>Sat, 23 Sep 2017 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2017/how-to-install-archlinux-with-full-disk-encryption-on-odroid-c2.html</guid>
      <description>&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
   &amp;lt;div id=&amp;quot;toctitle&amp;quot; class=&amp;quot;title&amp;quot;&amp;gt;
    Table of Contents
   &amp;lt;/div&amp;gt; 
   &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#introduction&amp;quot;&amp;gt;1. Introduction&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#hardware_requirements&amp;quot;&amp;gt;2. Hardware requirements&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#flash_the_os_image_and_boot_odroid_c2&amp;quot;&amp;gt;3. Flash the OS image and boot ODROID-C2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#change_passwords&amp;quot;&amp;gt;4. Change passwords&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#install_required_packages&amp;quot;&amp;gt;5. Install required packages&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#install_dracut&amp;quot;&amp;gt;6. Install dracut&amp;lt;/a&amp;gt; 
     &amp;lt;ul class=&amp;quot;sectlevel2&amp;quot;&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#error_aarch64_architecture_is_not_supported_by_the_package&amp;quot;&amp;gt;6.1. ERROR: aarch64 architecture is not supported by the package&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#error_makepkg_failed_unknown_public_key&amp;quot;&amp;gt;6.2. ERROR: makepkg FAILED (unknown public key)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#error_gnupg_key_generation_failed_no_pinentry&amp;quot;&amp;gt;6.3. ERROR: GnuPG Key generation failed: No pinentry&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#error_pacman_failed_to_install_missing_dependencies&amp;quot;&amp;gt;6.4. ERROR: &amp;#39;pacman&amp;#39; failed to install missing dependencies&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#error_dracut_command_not_found&amp;quot;&amp;gt;6.5. ERROR: dracut: command not found&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
     &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#prepare_the_luks_rootfs&amp;quot;&amp;gt;7. Prepare the LUKS rootfs&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#generate_new_initramfs_and_reboot_into_the_luks_rootfs&amp;quot;&amp;gt;8. Generate new initramfs and reboot into the LUKS rootfs&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#remotely_unlock_the_luks_rootfs_during_boot_using_dropbear_sshd&amp;quot;&amp;gt;9. Remotely unlock the LUKS rootfs during boot using Dropbear sshd&amp;lt;/a&amp;gt; 
     &amp;lt;ul class=&amp;quot;sectlevel2&amp;quot;&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#make_sure_the_ssh_daemon_is_running&amp;quot;&amp;gt;9.1. Make sure the SSH daemon is running&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#install_and_configure_dropbear&amp;quot;&amp;gt;9.2. Install and configure Dropbear&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#unlocking_the_volume_interactively&amp;quot;&amp;gt;9.3. Unlocking the volume interactively&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#unlocking_the_volume_using_a_password_file&amp;quot;&amp;gt;9.4. Unlocking the volume using a password file&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#optional_restrict_access_to_the_console_auth_command&amp;quot;&amp;gt;9.5. OPTIONAL: Restrict access to the console_auth command&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
     &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#references&amp;quot;&amp;gt;10. References&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;introduction&amp;quot;&amp;gt;1. Introduction&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Full Disk Encryption (FDE) protects our data against unauthorised access in case someone gains physical access to the storage media. This document describes how to install ArchLinux with Full Disk Encryption on ODROID-C2. The encryption method is LUKS with XTS key-size 512 bit (AES-256).&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;In a nutshell, Full Disk Encryption requires&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Encrypting a partition and copying the root filesystem to it.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;The kernel to include the &amp;lt;code&amp;gt;dm_crypt&amp;lt;/code&amp;gt; kernel module. In our case this is already included by default therefore we won’t need to re-compile the kernel.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;The &amp;lt;code&amp;gt;initramfs&amp;lt;/code&amp;gt; to include the &amp;lt;code&amp;gt;dm_crypt&amp;lt;/code&amp;gt; kernel module and the &amp;lt;code&amp;gt;cryptsetup&amp;lt;/code&amp;gt; binary. We use a tool called &amp;lt;code&amp;gt;dracut&amp;lt;/code&amp;gt; to generate the required &amp;lt;code&amp;gt;initramfs&amp;lt;/code&amp;gt;. Dracut supports the required functionality via the additional modules &amp;lt;code&amp;gt;crypt&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;lvm&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Passing the &amp;lt;a href=&amp;quot;https://www.kernel.org/pub/linux/utils/boot/dracut/dracut.html#_crypto_luks&amp;quot;&amp;gt;dracut options for LUKS&amp;lt;/a&amp;gt; to the &amp;lt;code&amp;gt;initramfs&amp;lt;/code&amp;gt; via the &amp;lt;code&amp;gt;bootargs&amp;lt;/code&amp;gt; property inside &amp;lt;code&amp;gt;boot.ini&amp;lt;/code&amp;gt;. For example, say that in our case we want the &amp;lt;code&amp;gt;initramfs&amp;lt;/code&amp;gt; to unlock a LUKS volume with UUID &amp;lt;code&amp;gt;ae51db2d-0890-4b1b-abc5-8c10f01da353&amp;lt;/code&amp;gt; and load the root filesystem from the device mapper &amp;lt;code&amp;gt;/dev/mapper/vg-root&amp;lt;/code&amp;gt;. To pass these dracut options we configure the following&amp;lt;/p&amp;gt; 
     &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
      &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
       sudo nano /boot/boot.ini
      &amp;lt;/div&amp;gt; 
      &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
       &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-ini&amp;quot; data-lang=&amp;quot;ini&amp;quot;&amp;gt;setenv bootargs &amp;quot;rd.luks.uuid=ae51db2d-0890-4b1b-abc5-8c10f01da353 root=/dev/mapper/vg-root rootwait &amp;amp;lt;leave the rest as is&amp;amp;gt;&amp;quot;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
      &amp;lt;/div&amp;gt; 
     &amp;lt;/div&amp;gt; 
     &amp;lt;div class=&amp;quot;admonitionblock note&amp;quot;&amp;gt; 
      &amp;lt;table&amp;gt; 
       &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt; 
         &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; 
          &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
           Note
          &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
         &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; 
          &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
           &amp;lt;p&amp;gt;A lot of the steps throughout this document involve editing configuration files. To keep the words to the minimum, we use the above notation as a very concise way to describe such file editing steps. The above notation means&amp;lt;/p&amp;gt; 
          &amp;lt;/div&amp;gt; 
          &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
           &amp;lt;ul&amp;gt; 
            &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;You need to edit the file &amp;lt;code&amp;gt;/boot/boot.ini&amp;lt;/code&amp;gt; with root privileges (hence &amp;lt;code&amp;gt;sudo nano /boot/boot.ini&amp;lt;/code&amp;gt;). Nano is the command line editor, however feel free to use another editor of your choice.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
            &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Find the line starting with &amp;lt;code&amp;gt;setenv bootargs&amp;lt;/code&amp;gt; and add or edit the configuration options &amp;lt;code&amp;gt;rd.luks.uuid=ae51db2d-0890-4b1b-abc5-8c10f01da353 root=/dev/mapper/vg-root rootwait&amp;lt;/code&amp;gt;. Some files mentioned throughout this document might have the corresponding line being commented out or not present at all. If that’s the case you will need to uncomment or append the line into the file, respectively.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
            &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Leave the rest of the line after &amp;lt;code&amp;gt;rootwait&amp;lt;/code&amp;gt; as is.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
           &amp;lt;/ul&amp;gt; 
          &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
        &amp;lt;/tr&amp;gt; 
       &amp;lt;/tbody&amp;gt;
      &amp;lt;/table&amp;gt; 
     &amp;lt;/div&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Additionally, for a headless setup you will need to enable remote unlocking via SSH as described in &amp;lt;a href=&amp;quot;#remotely_unlock_the_luks_rootfs_during_boot_using_dropbear_sshd&amp;quot;&amp;gt;Remotely unlock the LUKS rootfs during boot using Dropbear sshd&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Last but not least, if you prefer to use the described functionality out of the box, simply download &amp;lt;a href=&amp;quot;../../os-image-for-odroid-c2-featuring-archlinux-luks-full-disk-encryption-and-remote-unlocking.html&amp;quot;&amp;gt;this OS image&amp;lt;/a&amp;gt;. Either way, the current document will provide more technical details in regards to the underlying components and how they work together in a Full Disk Encryption environment.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;hardware_requirements&amp;quot;&amp;gt;2. Hardware requirements&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;ODROID-C2&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;A Linux box from which you will flash the OS image and interact with the ODROID-C2&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;USB disk with at least 4G capacity&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;microSD card or eMMC module with at least 4G capacity&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;(Optional) &amp;lt;a href=&amp;quot;http://www.hardkernel.com/main/products/prdt_info.php?g_code=G134111883934&amp;quot;&amp;gt;USB-UART Module Kit&amp;lt;/a&amp;gt; for connecting with the ODROID-C2’s serial console. Refer to &amp;lt;a href=&amp;quot;https://yesday.github.io/blog/2017/why-is-the-serial-console-better-than-hdmi-for-debugging.html&amp;quot;&amp;gt;this post&amp;lt;/a&amp;gt; for instructions on how to connect along with explanation why the serial console is highly recommended in this case.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;flash_the_os_image_and_boot_odroid_c2&amp;quot;&amp;gt;3. Flash the OS image and boot ODROID-C2&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Flash the OS image to the &amp;lt;strong&amp;gt;USB disk&amp;lt;/strong&amp;gt; by following the instructions from &amp;lt;a href=&amp;quot;https://archlinuxarm.org/platforms/armv8/amlogic/odroid-c2&amp;quot; class=&amp;quot;bare&amp;quot;&amp;gt;https://archlinuxarm.org/platforms/armv8/amlogic/odroid-c2&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Replace &amp;lt;code&amp;gt;/dev/mmcblk0&amp;lt;/code&amp;gt; in the following instructions with the device name for the microSD card as it appears on your computer.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;If mounted, unmount the partitions of the &amp;lt;strong&amp;gt;microSD card&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;lsblk
umount /dev/mmcblk0p1
umount /dev/mmcblk0p2&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Zero the beginning of the microSD card&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo dd if=/dev/zero bs=1M count=8 of=/dev/mmcblk0
sync&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Using a tool like GParted, create an MBR/msdos partition table and two partitions on the microSD card&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;code&amp;gt;ext4&amp;lt;/code&amp;gt; partition with &amp;lt;code&amp;gt;128M&amp;lt;/code&amp;gt; size&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;code&amp;gt;lvm2&amp;lt;/code&amp;gt; partition occupying the rest of the space (no need to format yet)&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Copy the contents of the &amp;lt;code&amp;gt;/boot&amp;lt;/code&amp;gt; directory from the USB disk into the first partition of the microSD card&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo cp -R /media/user/usb-disk/boot/* /media/user/micro-sd-card-part1/&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Create a symbolic link as a workaround for the &amp;lt;a href=&amp;quot;https://forum.odroid.com/viewtopic.php?f=138&amp;amp;amp;t=19452&amp;quot;&amp;gt;hardcoded boot.ini path of the alarm/uboot-odroid-c2&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;cd /media/user/micro-sd-card-part1
sudo ln -s . boot&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Flash the bootloader files&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo ./sd_fusing.sh /dev/mmcblk0&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Determine the UUID of the USB disk&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;$ sudo lsblk -o name,uuid,mountpoint
NAME                    UUID                                   MOUNTPOINT
sdb
└─sdb1                  2b53696c-2e8e-4e61-a164-1a7463fd3785   /media/user/usb-disk&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;admonitionblock caution&amp;quot;&amp;gt; 
   &amp;lt;table&amp;gt; 
    &amp;lt;tbody&amp;gt;
     &amp;lt;tr&amp;gt; 
      &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; 
       &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
        Caution
       &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
      &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; If there are duplicate UUIDs among the partitions of the USB disk and the microSD card then deduplicate them (e.g. &amp;lt;code&amp;gt;sudo tune2fs /dev/sda2 -U $(uuidgen)&amp;lt;/code&amp;gt;) to avoid future conflicts. &amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
    &amp;lt;/tbody&amp;gt;
   &amp;lt;/table&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Configure the &amp;lt;code&amp;gt;boot.ini&amp;lt;/code&amp;gt; to boot from the USB disk. To do so, use the UUID from the previous step to configure the &amp;lt;code&amp;gt;boot.ini&amp;lt;/code&amp;gt; of the microSD card.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    sudo nano /media/user/micro-sd-card-part1/boot.ini
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-ini&amp;quot; data-lang=&amp;quot;ini&amp;quot;&amp;gt;setenv bootargs &amp;quot;root=UUID=2b53696c-2e8e-4e61-a164-1a7463fd3785 rootwait &amp;amp;lt;leave the rest as is&amp;amp;gt;&amp;quot;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Unmount, run &amp;lt;code&amp;gt;sync&amp;lt;/code&amp;gt; few times, and remove the microSD card and the USB disk from the Linux box.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Plug the microSD card and the USB disk to the ODROID-C2.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Boot the ODROID-C2 and connect to its serial console. If you need instructions on how to connect to the serial console, &amp;lt;a href=&amp;quot;why-is-the-serial-console-better-than-hdmi-for-debugging.html&amp;quot;&amp;gt;refer here&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;If all goes well you should boot into the USB disk.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;admonitionblock caution&amp;quot;&amp;gt; 
   &amp;lt;table&amp;gt; 
    &amp;lt;tbody&amp;gt;
     &amp;lt;tr&amp;gt; 
      &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; 
       &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
        Caution
       &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
      &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; If &amp;lt;code&amp;gt;root=UUID=2b53696c-2e8e-4e61-a164-1a7463fd3785&amp;lt;/code&amp;gt; doesn’t work then try &amp;lt;code&amp;gt;root=/dev/sda1&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;root=/dev/sdb1&amp;lt;/code&amp;gt; or whatever device name you see in the console prior to the failed boot (e.g. &amp;lt;code&amp;gt;[ 14.812393] sd 1:0:0:0: [sda] Attached SCSI removable disk&amp;lt;/code&amp;gt;). If still having issues try restarting some times and/or repositioning the USB disk into a different USB port on the ODROID-C2. Don’t worry if it seems to be giving you trouble, as you won’t have to boot to the USB disk again after the first successful boot. &amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
    &amp;lt;/tbody&amp;gt;
   &amp;lt;/table&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;The default credentials are &amp;lt;code&amp;gt;alarm/alarm&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;root/root&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Verify the root filesystem is mounted from the USB disk&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;df -h&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;change_passwords&amp;quot;&amp;gt;4. Change passwords&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Change the passwords for the &amp;lt;code&amp;gt;alarm&amp;lt;/code&amp;gt; and the &amp;lt;code&amp;gt;root&amp;lt;/code&amp;gt; user. The default credentials are &amp;lt;code&amp;gt;alarm/alarm&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;root/root&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;passwd
su
passwd&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;install_required_packages&amp;quot;&amp;gt;5. Install required packages&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;su
pacman -Syu
pacman -S --needed sudo python git rsync lvm2 cryptsetup&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;(Optional) Setup passwordless sudo for the user &amp;lt;code&amp;gt;alarm&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;echo &amp;#39;alarm ALL=(ALL) NOPASSWD: ALL&amp;#39; &amp;amp;gt; /etc/sudoers.d/010_alarm-nopasswd&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;install_dracut&amp;quot;&amp;gt;6. Install dracut&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Install trizen (&amp;lt;a href=&amp;quot;https://wiki.archlinux.org/index.php/AUR_helpers&amp;quot;&amp;gt;AUR helper&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;sudo pacman -S --needed base-devel
mkdir ~/aur &amp;amp;amp;&amp;amp;amp; cd $_
git clone https://aur.archlinux.org/trizen.git
cd trizen
makepkg -si --needed --noconfirm&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Install dracut using the trizen tool&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;trizen -S dracut&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Verify the dracut installation by listing modules&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;dracut --list-modules&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;error_aarch64_architecture_is_not_supported_by_the_package&amp;quot;&amp;gt;6.1. ERROR: aarch64 architecture is not supported by the package&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If &amp;lt;code&amp;gt;trizen -S dracut&amp;lt;/code&amp;gt; reports an error that &amp;lt;code&amp;gt;aarch64&amp;lt;/code&amp;gt; architecture is not supported by the package, then follow these steps to configure support for aarch64&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;cd /tmp/trizen-alarm/dracut/
nano PKGBUILD # replace `arch=(&amp;quot;i686&amp;quot; &amp;quot;x86_64&amp;quot;)` with `arch=(&amp;quot;aarch64&amp;quot;)`
makepkg -si --needed --noconfirm&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;error_makepkg_failed_unknown_public_key&amp;quot;&amp;gt;6.2. ERROR: makepkg FAILED (unknown public key)&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If the &amp;lt;code&amp;gt;makepkg&amp;lt;/code&amp;gt; reports an error like &amp;lt;code&amp;gt;dracut-046.tar …​ FAILED (unknown public key 340F12141EA0994D)&amp;lt;/code&amp;gt;, then type these commands and try again&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;gpg --full-gen-key
gpg --recv-key 340F12141EA0994D&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Refer to &amp;lt;a href=&amp;quot;https://wiki.archlinux.org/index.php/Makepkg#Signature_checking&amp;quot;&amp;gt;Makepkg signature checking&amp;lt;/a&amp;gt; for more details.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;error_gnupg_key_generation_failed_no_pinentry&amp;quot;&amp;gt;6.3. ERROR: GnuPG Key generation failed: No pinentry&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If &amp;lt;code&amp;gt;gpg --full-gen-key&amp;lt;/code&amp;gt; reports the error &amp;lt;code&amp;gt;Key generation failed: No pinentry&amp;lt;/code&amp;gt;, then follow the below steps to configure gpg as described in &amp;lt;a href=&amp;quot;https://wiki.archlinux.org/index.php/GnuPG#gpg-agent&amp;quot; class=&amp;quot;bare&amp;quot;&amp;gt;https://wiki.archlinux.org/index.php/GnuPG#gpg-agent&amp;lt;/a&amp;gt;, and try again.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;The gpg-agent needs to know how to ask the user for the password.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     nano ~/.gnupg/gpg-agent.conf
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-conf&amp;quot; data-lang=&amp;quot;conf&amp;quot;&amp;gt;pinentry-program /usr/bin/pinentry-curses&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Reload the gpg-agent&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;gpg-connect-agent reloadagent /bye&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;error_pacman_failed_to_install_missing_dependencies&amp;quot;&amp;gt;6.4. ERROR: &amp;#39;pacman&amp;#39; failed to install missing dependencies&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If &amp;lt;code&amp;gt;makepkg&amp;lt;/code&amp;gt; reports missing dependencies error, then upgrade the packages and try again.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;sudo pacman -Syu
trizen -Syua&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;error_dracut_command_not_found&amp;quot;&amp;gt;6.5. ERROR: dracut: command not found&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If after running &amp;lt;code&amp;gt;trizen -S dracut&amp;lt;/code&amp;gt; the dracut command is not installed, then try installing it manually without using the trizen AUR helper.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;cd /tmp/trizen-alarm/dracut/
makepkg -si --needed --noconfirm&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;prepare_the_luks_rootfs&amp;quot;&amp;gt;7. Prepare the LUKS rootfs&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Encrypt the second partition of the microSD card (see also &amp;lt;a href=&amp;quot;https://security.stackexchange.com/questions/40208/recommended-options-for-luks-cryptsetup&amp;quot;&amp;gt;Recommended options for LUKS&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo cryptsetup -v -y -c aes-xts-plain64 -s 512 -h sha512 -i 5000 --use-random luksFormat /dev/mmcblk0p2&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;-v = verbose
-y = verify passphrase, ask twice, and complain if they don&amp;#39;t match
-c = specify the cipher used
-s = specify the key size used
-h = specify the hash used
-i = number of milliseconds to spend passphrase processing (if using anything more than sha1, must be great than 1000)
--use-random = which random number generator to use
luksFormat = to initialize the partition and set a passphrase
/dev/mmcblk0p2 = the partition to encrypt&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Unlock the LUKS device and mount it at /dev/mapper/lvm&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo cryptsetup luksOpen /dev/mmcblk0p2 lvm&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Create primary volume, volume group, and logical volume&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;sudo pvcreate /dev/mapper/lvm
sudo vgcreate vg /dev/mapper/lvm
sudo lvcreate -l 100%FREE -n root vg&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Create filesystem&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo mkfs.ext4 -O ^metadata_csum,^64bit /dev/mapper/vg-root&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Mount the new encrypted root volume (logical volume)&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo mount /dev/mapper/vg-root /mnt&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Copy the existing root volume to the new, encrypted root volume (with a &amp;lt;code&amp;gt;1.5G&amp;lt;/code&amp;gt; installation, completes in about 6 min on an average microSD)&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;sudo rsync -av \
--exclude=/boot \
--exclude=/mnt \
--exclude=/proc \
--exclude=/dev \
--exclude=/sys \
--exclude=/tmp \
--exclude=/run \
--exclude=/media \
--exclude=/var/log \
--exclude=/var/cache/pacman/pkg \
--exclude=/usr/src/linux-headers* \
--exclude=/home/*/.gvfs \
--exclude=/home/*/.local/share/Trash \
/ /mnt&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;If the SSH host keys are empty, remove them so that they will be regenerated the next time the sshd starts. This will prevent the memory leak issue as described &amp;lt;a href=&amp;quot;https://raspberrypi.stackexchange.com/questions/69289/raspberry-pi-3-on-arch-armv7-openssh-daemon-failed-on-memory-allocation&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo rm /mnt/etc/ssh/ssh_host*key*&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Create some directories and mount the boot partition&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;sudo mkdir -p /mnt/boot /mnt/mnt /mnt/proc /mnt/dev /mnt/sys /mnt/tmp
sudo mount -t ext4 /dev/mmcblk0p1 /mnt/boot&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Register the encrypted volume in &amp;lt;code&amp;gt;crypttab&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo bash -c &amp;#39;echo lvm UUID=$(cryptsetup luksUUID /dev/mmcblk0p2) none luks&amp;amp;gt;&amp;amp;gt; /mnt/etc/crypttab&amp;#39;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Configure &amp;lt;code&amp;gt;fstab&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    sudo nano /mnt/etc/fstab
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code&amp;gt;/dev/mapper/vg-root / ext4 errors=remount-ro,noatime,discard 0 1
/dev/mmcblk0p1 /boot ext4 noatime,discard 0 2&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;generate_new_initramfs_and_reboot_into_the_luks_rootfs&amp;quot;&amp;gt;8. Generate new initramfs and reboot into the LUKS rootfs&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Generate new initramfs using dracut. The below will add the dracut modules &amp;lt;code&amp;gt;crypt&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;lvm&amp;lt;/code&amp;gt; to the initramfs. These modules will prompt for LUKS password during boot and unlock the LUKS volume. Mind that the order of the modules is important.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo dracut --force --hostonly -a &amp;quot;crypt lvm&amp;quot; /mnt/boot/initramfs-linux.img&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Determine the LUKS UUID&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo cryptsetup luksUUID /dev/mmcblk0p2
470cc9eb-f36b-40a2-98d8-7fce3285bb89&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Configure the &amp;lt;code&amp;gt;rd.luks.uuid&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;root&amp;lt;/code&amp;gt; dracut options in &amp;lt;code&amp;gt;bootargs&amp;lt;/code&amp;gt;. These will unlock the LUKS volume and load the rootfs from it during boot.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    sudo nano /mnt/boot/boot.ini
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-ini&amp;quot; data-lang=&amp;quot;ini&amp;quot;&amp;gt;setenv bootargs &amp;quot;rd.luks.uuid=470cc9eb-f36b-40a2-98d8-7fce3285bb89 root=/dev/mapper/vg-root rootwait &amp;amp;lt;leave the rest as is&amp;amp;gt;&amp;quot;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;admonitionblock caution&amp;quot;&amp;gt; 
   &amp;lt;table&amp;gt; 
    &amp;lt;tbody&amp;gt;
     &amp;lt;tr&amp;gt; 
      &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; 
       &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
        Caution
       &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
      &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; In the above step, do NOT delete the rest of &amp;lt;code&amp;gt;bootargs&amp;lt;/code&amp;gt;, essentially replace &amp;lt;code&amp;gt;root=UUID=2b53696c-2e8e-4e61-a164-1a7463fd3785&amp;lt;/code&amp;gt; with &amp;lt;code&amp;gt;rd.luks.uuid=470cc9eb-f36b-40a2-98d8-7fce3285bb89 root=/dev/mapper/vg-root&amp;lt;/code&amp;gt; and leave the rest of &amp;lt;code&amp;gt;bootargs&amp;lt;/code&amp;gt; untouched. &amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
    &amp;lt;/tbody&amp;gt;
   &amp;lt;/table&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Unmount and reboot into the LUKS rootfs&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;sudo umount /mnt/boot
sudo umount /mnt
sudo reboot&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;If all goes well you will be prompted to enter the LUKS password during boot.&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Verify the LUKS rootfs&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;df -h&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    output
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-bash&amp;quot; data-lang=&amp;quot;bash&amp;quot;&amp;gt;Filesystem           Size  Used Avail Use% Mounted on
devtmpfs             714M     0  714M   0% /dev
tmpfs                859M     0  859M   0% /dev/shm
tmpfs                859M  8.3M  851M   1% /run
tmpfs                859M     0  859M   0% /sys/fs/cgroup
/dev/mapper/vg-root  1.7G  1.4G  256M  85% /
tmpfs                859M     0  859M   0% /tmp
/dev/mmcblk0p1       120M   26M   86M  23% /boot
tmpfs                172M     0  172M   0% /run/user/1000&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;remotely_unlock_the_luks_rootfs_during_boot_using_dropbear_sshd&amp;quot;&amp;gt;9. Remotely unlock the LUKS rootfs during boot using Dropbear sshd&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Replace &amp;lt;code&amp;gt;10.0.0.100&amp;lt;/code&amp;gt; in the following instructions with the IP address assigned to the ODROID-C2 by your local DHCP server. Use the &amp;lt;code&amp;gt;fing&amp;lt;/code&amp;gt; tool to find the assigned IP address (e.g. &amp;lt;code&amp;gt;sudo fing 10.0.0.1/24&amp;lt;/code&amp;gt;).&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;make_sure_the_ssh_daemon_is_running&amp;quot;&amp;gt;9.1. Make sure the SSH daemon is running&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;sudo systemctl status sshd
journalctl -u sshd -n 100&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If the above commands report that &amp;lt;code&amp;gt;sshd&amp;lt;/code&amp;gt; fails with memory allocation error, then&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;sudo rm /etc/ssh/ssh_host*key*
sudo systemctl start sshd&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;See also &amp;lt;a href=&amp;quot;https://raspberrypi.stackexchange.com/questions/69289/raspberry-pi-3-on-arch-armv7-openssh-daemon-failed-on-memory-allocation&amp;quot;&amp;gt;memory leak of sshd&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;install_and_configure_dropbear&amp;quot;&amp;gt;9.2. Install and configure Dropbear&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Install the dracut module &amp;lt;a href=&amp;quot;https://github.com/dracut-crypt-ssh/dracut-crypt-ssh&amp;quot;&amp;gt;crypt-ssh&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;trizen -S dracut-crypt-ssh-git&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;From your Linux box, copy the public SSH key to the &amp;lt;code&amp;gt;appconf/dracut-crypt-ssh/authorized_keys&amp;lt;/code&amp;gt; file on the remote ODROID-C2 server&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;cat ~/.ssh/*.pub | ssh alarm@10.0.0.100 &amp;#39;umask 077; mkdir -p appconf/dracut-crypt-ssh; touch appconf/dracut-crypt-ssh/authorized_keys; cat &amp;amp;gt;&amp;amp;gt;appconf/dracut-crypt-ssh/authorized_keys&amp;#39;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Configure the &amp;lt;code&amp;gt;crypt-ssh&amp;lt;/code&amp;gt; module&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     sudo nano /etc/dracut.conf.d/crypt-ssh.conf
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-conf&amp;quot; data-lang=&amp;quot;conf&amp;quot;&amp;gt;dropbear_acl=&amp;quot;/home/alarm/appconf/dracut-crypt-ssh/authorized_keys&amp;quot;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Generate new initramfs using dracut. The below will add the dracut modules &amp;lt;code&amp;gt;network&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;crypt-ssh&amp;lt;/code&amp;gt; to the initramfs. Mind that the order of the modules is important.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;sudo dracut --force --hostonly -a &amp;quot;network crypt lvm crypt-ssh&amp;quot; /boot/initramfs-linux.img&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Enable network access during boot by adding &amp;lt;code&amp;gt;rd.neednet&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;ip&amp;lt;/code&amp;gt; dracut options to &amp;lt;code&amp;gt;bootargs&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     sudo nano /boot/boot.ini
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-ini&amp;quot; data-lang=&amp;quot;ini&amp;quot;&amp;gt;setenv bootargs &amp;quot;rd.neednet=1 ip=10.0.0.100::10.0.0.1:255.255.255.0:archlinux-luks-host:eth0:off rd.luks.uuid=ae51db2d-0890-4b1b-abc5-8c10f01da353 root=/dev/mapper/vg-root rootwait &amp;amp;lt;leave the rest as is&amp;amp;gt;&amp;quot;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If you prefer DHCP instead of static ip, simply replace with &amp;lt;code&amp;gt;ip=dhcp&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Refer to &amp;lt;a href=&amp;quot;https://www.kernel.org/pub/linux/utils/boot/dracut/dracut.html#_network&amp;quot;&amp;gt;network documentation of dracut&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://fedoraproject.org/wiki/Dracut/Options&amp;quot;&amp;gt;dracut options&amp;lt;/a&amp;gt; for more options (&amp;lt;code&amp;gt;man dracut.cmdline&amp;lt;/code&amp;gt;).&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Reboot so that Dropbear starts, allowing for remote unlocking&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;sudo reboot&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;unlocking_the_volume_interactively&amp;quot;&amp;gt;9.3. Unlocking the volume interactively&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;From your Linux box, connect to the remote Dropbear SSH server running on the ODROID-C2&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;ssh -p 222 root@10.0.0.100&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Unlock the volume (asks you for the passphrase and sends it to console)&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;console_auth
Passphrase:&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;If unlocking the device succeeded, the initramfs will clean up itself and Dropbear terminates itself and your connection.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     Additional commands
    &amp;lt;/div&amp;gt; 
    &amp;lt;ul&amp;gt; 
     &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;code&amp;gt;console_peek&amp;lt;/code&amp;gt; Prints what’s on the console&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;/ul&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;admonitionblock note&amp;quot;&amp;gt; 
    &amp;lt;table&amp;gt; 
     &amp;lt;tbody&amp;gt;
      &amp;lt;tr&amp;gt; 
       &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; 
        &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
         Note
        &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
       &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; There is also the &amp;lt;a href=&amp;quot;https://github.com/dracut-crypt-ssh/dracut-crypt-ssh&amp;quot;&amp;gt;unlock command&amp;lt;/a&amp;gt; but we encountered &amp;lt;a href=&amp;quot;https://github.com/dracut-crypt-ssh/dracut-crypt-ssh/issues/4&amp;quot;&amp;gt;this issue&amp;lt;/a&amp;gt; when tested it at the time of this writing with all the latest updates installed. &amp;lt;/td&amp;gt; 
      &amp;lt;/tr&amp;gt; 
     &amp;lt;/tbody&amp;gt;
    &amp;lt;/table&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;unlocking_the_volume_using_a_password_file&amp;quot;&amp;gt;9.4. Unlocking the volume using a password file&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Some use cases require to feed input automatically to the interactive command &amp;lt;code&amp;gt;console_auth&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;From your Linux box, unlock the volume&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;ssh -p 222 root@10.0.0.100 console_auth &amp;amp;lt; password-file&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;or&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;gpg2 --decrypt password-file.gpg | ssh -p 222 root@10.0.0.100 console_auth&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;optional_restrict_access_to_the_console_auth_command&amp;quot;&amp;gt;9.5. OPTIONAL: Restrict access to the console_auth command&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;For additional security, you might want to only allow the execution of the command &amp;lt;code&amp;gt;console_auth&amp;lt;/code&amp;gt; and nothing else. To achieve this you need to configure the SSH key with restricting options in the &amp;lt;code&amp;gt;authorized_keys&amp;lt;/code&amp;gt; file.&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;From your Linux box, copy the public SSH key, with restricting options, to the &amp;lt;code&amp;gt;appconf/dracut-crypt-ssh/authorized_keys&amp;lt;/code&amp;gt; file on the remote ODROID-C2 server&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;(printf &amp;#39;command=&amp;quot;console_auth&amp;quot;,no-agent-forwarding,no-port-forwarding,no-pty,no-X11-forwarding &amp;#39; &amp;amp;amp;&amp;amp;amp; cat ~/.ssh/*.pub) | ssh alarm@10.0.0.100 &amp;#39;umask 077; mkdir -p appconf/dracut-crypt-ssh; touch appconf/dracut-crypt-ssh/authorized_keys; cat &amp;amp;gt;appconf/dracut-crypt-ssh/authorized_keys&amp;#39;&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Refer to the Dropbear documentation for a full list of restricting options. Prior to continuing, it might be a good idea to create a copy of the initramfs&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;sudo cp /boot/initramfs-linux.img /boot/initramfs-linux.img-`date +%y%m%d-%H%M%S`&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;admonitionblock caution&amp;quot;&amp;gt; 
    &amp;lt;table&amp;gt; 
     &amp;lt;tbody&amp;gt;
      &amp;lt;tr&amp;gt; 
       &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; 
        &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
         Caution
        &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
       &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; In headless setup, carefuly examine the restricting options to avoid locking yourself out. &amp;lt;/td&amp;gt; 
      &amp;lt;/tr&amp;gt; 
     &amp;lt;/tbody&amp;gt;
    &amp;lt;/table&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Generate new initramfs using dracut&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;sudo dracut --force --hostonly -a &amp;quot;network crypt lvm crypt-ssh&amp;quot; /boot/initramfs-linux.img&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;In this case, you can unlock the volume interactively by simply typing&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;ssh -p 222 root@10.0.0.100&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;Note that when typing the above command&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
    &amp;lt;ul&amp;gt; 
     &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;The &amp;lt;code&amp;gt;console_auth&amp;lt;/code&amp;gt; command is automatically invoked on the remote server and immediately prompts for password, as if you just typed &amp;lt;code&amp;gt;ssh -p 222 root@10.0.0.100 console_auth&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
     &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;While you type the password, it will be displayed on the screen in plain text. Therefore, you should avoid unlocking interactively when the access is restricted to the &amp;lt;code&amp;gt;console_auth&amp;lt;/code&amp;gt; command.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
     &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;When you press enter you will be disconnected no matter whether the password was correct or not. Whereas with the non-restricted login (see &amp;lt;a href=&amp;quot;#unlocking_the_volume_interactively&amp;quot;&amp;gt;Unlocking the volume interactively&amp;lt;/a&amp;gt;) you would only be disconnected if the password was correct, meaning that you would have feedback for whether the unlocking was successful or not.&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;/ul&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;On the other hand, to unlock the volume using a password file, from your Linux box, type&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;ssh -p 222 root@10.0.0.100 &amp;amp;lt; password-file&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;or&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;literalblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;gpg2 --decrypt password-file.gpg | ssh -p 222 root@10.0.0.100&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;references&amp;quot;&amp;gt;10. References&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system&amp;quot;&amp;gt;ArchLinux dm-crypt/Encrypting an entire system&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://forum.odroid.com/viewtopic.php?t=20972&amp;quot;&amp;gt;How to install Debian with Full Disk Encryption on ODROID-C2&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>OS image release for ODROID-C2</title>
      <link>http://yesday.github.io/blog/2017/os-image-release-for-odroid-c2.html</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2017/os-image-release-for-odroid-c2.html</guid>
      <description>&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;An &amp;lt;a href=&amp;quot;../../os-image-for-odroid-c2-featuring-archlinux-luks-full-disk-encryption-and-remote-unlocking.html&amp;quot;&amp;gt;OS image for ODROID-C2&amp;lt;/a&amp;gt; has been released featuring ArchLinux, Full Disk Encryption (FDE), and remote unlocking. The related page has been added under the website’s main menu &amp;lt;em&amp;gt;ODROID-C2 &amp;amp;gt; OS image&amp;lt;/em&amp;gt; to provide documentation and future updates.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;The root filesystem is encrypted with LUKS to provide additional protection against unauthorised access, particularly in the case when someone gains physical access to the device. The configuration is suitable for both headless and non headless setup, and supports remote unlocking (via SSH) of the encrypted root filesystem during the boot process.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;Read through the documentation for details on how to flash the OS image into a storage media along with other major information regarding the use of the image.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>Why is the serial console better than HDMI for debugging</title>
      <link>http://yesday.github.io/blog/2017/why-is-the-serial-console-better-than-hdmi-for-debugging.html</link>
      <pubDate>Sat, 9 Sep 2017 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2017/why-is-the-serial-console-better-than-hdmi-for-debugging.html</guid>
      <description>&amp;lt;div class=&amp;quot;openblock float-group&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph left&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    USB-UART Module Kit
   &amp;lt;/div&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;span class=&amp;quot;image&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://yesday.github.io/img/odroid-usb-uart-module-kit.jpg&amp;quot; alt=&amp;quot;odroid usb uart module kit&amp;quot; width=&amp;quot;190&amp;quot; height=&amp;quot;190&amp;quot; title=&amp;quot;USB-UART Module Kit&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph left&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    USB-UART connected to ODROID-C2
   &amp;lt;/div&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;span class=&amp;quot;image&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://yesday.github.io/img/usb-uart-connected-to-odroid-c2.png&amp;quot; alt=&amp;quot;usb uart connected to odroid c2&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;200&amp;quot; title=&amp;quot;USB-UART connected to ODROID-C2&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph left&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    Serial console early boot messages
   &amp;lt;/div&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;span class=&amp;quot;image&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://yesday.github.io/img/serial-console-early-boot-messages.png&amp;quot; alt=&amp;quot;serial console early boot messages&amp;quot; width=&amp;quot;340&amp;quot; height=&amp;quot;200&amp;quot; title=&amp;quot;Serial console early boot messages&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;Sometimes we need to vew the early boot messages of the ODROID-C2. This is the case when we are dealing with a problem during boot, or creating a special purpose boot image, or when we add new external devices.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;In order to view the early boot messages we need to connect our ODROID-C2’s serial console port to a USB port of another Linux box, using a &amp;lt;a href=&amp;quot;http://www.hardkernel.com/main/products/prdt_info.php?g_code=G134111883934&amp;quot;&amp;gt;USB-UART Module Kit&amp;lt;/a&amp;gt; (see the pictures above). This allows us to have remote serial access to our ODROID-C2, in a similar manner as an SSH connection would.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;However, the serial console is better suited for such debugging scenarios than ether SSH or HDMI and keyboard combination would. That is because the serial console allows us to interact with the ODROID-C2 even when the SSH is not accessible and the HDMI monitor is blank. Such scenarios are:&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
 &amp;lt;ul&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Diagnostic messages prior to the initialisation of the HDMI interface&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Diagnostic messages in case of problematic (or disabled) initialisation of the HDMI interface (e.g. &amp;lt;code&amp;gt;setenv nographics &amp;quot;1&amp;quot;&amp;lt;/code&amp;gt; configuration inside &amp;lt;code&amp;gt;boot.ini&amp;lt;/code&amp;gt;)&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Diagnostic messages prior to a failed boot&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;When we want to interrupt the automated boot process (hitting [Enter] twice during boot) to start an interactive u-boot shell. U-boot is a boot loader similar to lilo or grub, but is specifically designed for embedded devices like the ODROID-C2. Using the u-boot shell we can interactively test new boot configuration, load new kernel image, boot rootfs from a different partition, fix a failed boot process, and so on (essentially manually entering the boot commands found inside &amp;lt;code&amp;gt;boot.ini&amp;lt;/code&amp;gt;).&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;Follow these steps to connect to ODROID-C2’s serial console:&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
 &amp;lt;ul&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Connect the USB-UART cable to the serial console port of the ODROID-C2 and the USB port of another Linux box&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Power on the ODROID-C2 via the microUSB or the DC connector&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Connect to the ODROID-C2 from the Linux box by typing &amp;lt;code&amp;gt;sudo minicom -b 115200 -D /dev/ttyUSB0&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;For more information refer to &amp;lt;a href=&amp;quot;https://github.com/umiddelb/armhf/wiki/Get-more-out-of-%22Das-U-Boot%22&amp;quot;&amp;gt;Get more out of &amp;quot;Das U Boot&amp;quot;&amp;lt;/a&amp;gt; and the section &amp;quot;USB / UART kit&amp;quot; from the &amp;lt;a href=&amp;quot;https://magazine.odroid.com/wp-content/uploads/odroid-c2-user-manual.pdf&amp;quot;&amp;gt;HARDKERNEL ODROID-C2 USER MANUAL&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item>

  </channel> 
</rss>
